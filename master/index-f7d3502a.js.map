{"version":3,"file":"index-f7d3502a.js","sources":["../../node_modules/fetch-blob/streams.cjs","../../node_modules/fetch-blob/index.js","../../node_modules/fetch-blob/file.js","../../node_modules/formdata-polyfill/esm.min.js","../../node_modules/node-fetch/src/errors/base.js","../../node_modules/node-fetch/src/errors/fetch-error.js","../../node_modules/node-fetch/src/utils/is.js","../../node_modules/node-fetch/src/body.js","../../node_modules/node-fetch/src/headers.js","../../node_modules/node-fetch/src/utils/is-redirect.js","../../node_modules/node-fetch/src/response.js","../../node_modules/node-fetch/src/utils/referrer.js","../../node_modules/node-fetch/src/request.js","../../node_modules/node-fetch/src/utils/get-search.js","../../node_modules/node-fetch/src/errors/abort-error.js","../../node_modules/node-domexception/index.js","../../node_modules/fetch-blob/from.js","../../node_modules/node-fetch/src/index.js","../../node_modules/data-uri-to-buffer/dist/index.js"],"sourcesContent":["/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","/*! fetch-blob. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","/*! formdata-polyfill. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy Â§8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy Â§3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy Â§3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy Â§3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing Â§3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy Â§8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy Â§8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy Â§8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy Â§8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and responseâs header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in Â§ 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// Â§5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// Â§5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// Â§5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// Â§5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// Â§5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/*! node-domexception. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map"],"names":["globalThis","ReadableStream","process","require","emitWarning","Object","assign","error","Blob","prototype","stream","params","position","blob","this","type","async","ctrl","chunk","slice","Math","min","size","buffer","arrayBuffer","byteLength","enqueue","Uint8Array","close","toIterator","parts","clone","part","ArrayBuffer","isView","byteOffset","end","b","_Blob","endings","constructor","blobParts","options","TypeError","Symbol","iterator","encoder","TextEncoder","element","encode","push","undefined","String","test","decoder","TextDecoder","str","decode","data","offset","set","length","it","next","done","value","return","start","relativeStart","max","relativeEnd","span","added","subarray","toLowerCase","toStringTag","static","hasInstance","object","defineProperties","enumerable","File","lastModified","name","fileBits","fileName","arguments","super","Date","now","Number","isNaN","t","i","h","r","random","m","split","f","a","c","F","e","replace","x","n","FormData","d","entries","o","some","append","delete","filter","get","l","getAll","forEach","has","call","keys","values","FetchBaseError","Error","message","captureStackTrace","FetchError","systemError","code","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","sort","isBlob","pipeline","promisify","Stream","INTERNALS","Body","body","boundary","Buffer","from","toString","isBuffer","types","isAnyArrayBuffer","B","C","padStart","p","v","formDataToBlob","Readable","disturbed","on","error_","url","bodyUsed","consumeBody","ct","headers","startsWith","formData","parameters","URLSearchParams","text","toFormData","import","buf","JSON","parse","alloc","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","join","concat","deprecate","json","instance","highWaterMark","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","request","validateHeaderName","http","defineProperty","validateHeaderValue","Headers","init","result","raw","map","isBoxedPrimitive","method","pair","Proxy","target","receiver","Set","Reflect","callback","thisArg","apply","reduce","key","for","property","redirectStatus","isRedirect","Response","status","contentType","statusText","counter","ok","redirected","RangeError","location","URL","response","stringify","stripURLForUseAsAReferrer","originOnly","protocol","username","password","hash","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","endsWith","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","input","parsedURL","toUpperCase","inputBody","signal","referrer","parsedReferrer","redirect","follow","compress","agent","insecureHTTPParser","referrerPolicy","formatUrl","validateReferrerPolicy","getNodeRequestOptions","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","origin","determineRequestsReferrer","lastOffset","href","getSearch","path","AbortError","DOMException","MessageChannel","require$$0","port","port1","ab","postMessage","err","stat","fs","blobFromSync","fromBlob","statSync","blobFrom","then","fileFrom","fromFile","fileFromSync","BlobDataItem","mtimeMs","basename","createReadStream","supportedSchemas","fetch","options_","Promise","resolve","reject","uri","firstComma","indexOf","meta","substring","charset","base64","typeFull","encoding","unescape","dataUriToBuffer","send","https","abort","emit","aborted","abortAndFinalize","finalize","request_","addEventListener","removeEventListener","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","compare","prependListener","removeListener","fixResponseChunkedTransferBadEnding","version","s","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","index","array","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","destination","original","orig","hostname","dest","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","token","parseReferrerPolicyFromHeader","once","pump","responseOptions","statusMessage","codings","zlibOptions","flush","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","writeToStream","catch"],"mappings":"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"}